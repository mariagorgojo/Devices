name: CI

on:
  pull_request:
    paths:
      - '**.java'
      - '**.xml'
      - '**.so'
      - '**.jnilib'
      - '**.dll'
      - '.github/workflows/*.yml'
  push:
    branches:
      - master
    paths:
      - '**.java'
      - '**.xml'
      - '**.so'
      - '**.jnilib'
      - '**.dll'
      - '.github/workflows/*.yml'

jobs:
  test:
    name: test ${{ matrix.os }} jdk${{ matrix.java }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [8, 11, 16]
        exclude:
          - os: windows-latest
            java: 11
          - os: windows-latest
            java: 8
          - os: macos-latest
            java: 11
          - os: macos-latest
            java: 8
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{ runner.os }}-jdk${{ matrix.java }}-${{ hashFiles('**/*.sbt') }}
          restore-keys: ${{ runner.os }}-jdk${{ matrix.java }}-
      - name: Test
        run: mvn test

  test_graalvm:
    name: test ubuntu-latest jdk11 GraalVM native-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: DeLaGuardo/setup-graalvm@master
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: '21.0.0.2'
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: 'java11'
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'
      - name: Install native-image component
        run: |
          gu install native-image
      - name: Test
        run: mvn -Pnative test
